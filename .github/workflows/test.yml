name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: cidery_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test environment
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/cidery_test" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "NEXTAUTH_SECRET=test-secret" >> $GITHUB_ENV
          echo "NEXTAUTH_URL=http://localhost:3000" >> $GITHUB_ENV

      - name: Run type checking
        run: pnpm typecheck

      - name: Run linting
        run: pnpm lint

      - name: Run tests with coverage
        run: pnpm test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: |
            ./apps/web/coverage/lcov.info
            ./packages/api/coverage/lcov.info
            ./packages/db/coverage/lcov.info
            ./packages/lib/coverage/lcov.info
            ./packages/worker/coverage/lcov.info
          fail_ci_if_error: false

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: |
            ./apps/web/coverage/lcov.info
            ./packages/api/coverage/lcov.info
            ./packages/db/coverage/lcov.info
            ./packages/lib/coverage/lcov.info
            ./packages/worker/coverage/lcov.info

  build:
    name: Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Check for build artifacts
        run: |
          test -d apps/web/.next || (echo "Web app build failed" && exit 1)
          test -d packages/api/dist || (echo "API package build failed" && exit 1)
          test -d packages/db/dist || (echo "DB package build failed" && exit 1)
          test -d packages/lib/dist || (echo "Lib package build failed" && exit 1)
          test -d packages/worker/dist || (echo "Worker package build failed" && exit 1)